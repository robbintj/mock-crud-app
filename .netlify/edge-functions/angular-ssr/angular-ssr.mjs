
  import "./polyfill.mjs";
  import { Buffer } from "node:buffer";
  import { renderApplication } from "../../../dist/mock-crud-app/server/render-utils.server.mjs";
  import bootstrap from "../../../dist/mock-crud-app/server/main.server.mjs";
  import "./fixup-event.mjs";

  const document = Buffer.from("", 'base64').toString("utf-8");
  
  export default async (request, context) => {
    const html = await renderApplication(bootstrap, {
      url: request.url,
      document,
      platformProviders: [{ provide: "netlify.request", useValue: request }, { provide: "netlify.context", useValue: context }],
    });
    return new Response(html, { headers: { "content-type": "text/html" } });
  };
  
  export const config = {
    path: "/*",
    excludedPath: ["/chunk-LVYMXW5K.js","/chunk-SNQ6VNJA.js","/favicon.ico","/index.csr.html","/login/index.html","/main-ORXHL633.js","/polyfills-SCHOHYNV.js","/register/index.html","/styles-D63KPPI3.css","/login","/register"],
    generator: "@netlify/angular-runtime@2.1.0",
    name: "Angular SSR",
  };
  